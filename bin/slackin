#!/usr/bin/env node

var commander = require("commander");
var slackin = require('./../dist').default

commander
  .option('-p, --port [slackin_port]', 'Port to listen on [$PORT or 3000]', parseInt)
  .option('-h, --hostname [slackin_hostname]', 'Hostname to listen on [$HOSTNAME or 0.0.0.0]')
  .option('-c, --channels [slackin_channels]', 'One or more comma-separated channel names to allow single-channel guests [$SLACK_CHANNELS]')
  .option('-i, --interval [slackin_interval]', 'How frequently (ms) to poll Slack [$SLACK_INTERVAL or 5000]')
  .option('-P, --path [slackin_path]', 'Path to serve slackin under', '/')
  .option('-s, --silent', 'Do not print out warns or errors')
  .option('-x, --cors', 'Enable CORS for all routes')
  .option('-C, --coc [slackin_coc]', 'Full URL to a CoC that needs to be agreed to')
  .option('-S, --css [slackin_css]', 'Full URL to a custom CSS file to use on the main page')
  .option('-k, --sitekey [slackin_sitekey]', 'Google recaptcha site key')
  .option('-r, --captcha [slackin_captcha]', 'Google recaptcha secret to verify user response')
  .option('-o, --org [slackin_teamname]', 'Slack team name')
  .option('-t, --token [slackin_token]', 'Slack API token')
  .parse(process.argv);

commander.port = commander.port || process.env.OPENSHIFT_NODEJS_PORT || require('hostenv').PORT || process.env.PORT || 3000;
commander.hostname = commander.hostname || process.env.OPENSHIFT_NODEJS_IP || require('hostenv').HOSTNAME || process.env.WEBSITE_HOSTNAME || '0.0.0.0';
commander.channels = commander.channels || process.env.SLACK_CHANNELS;
commander.interval = commander.interval || process.env.SLACK_INTERVAL || 5000;
commander.sitekey = commander.sitekey || process.env.RECAPTCHA_SITE_KEY;
commander.captcha = commander.captcha || process.env.RECAPTCHA_SECRET;
commander.org = commander.org || process.env.SLACK_SUBDOMAIN;
commander.token = commander.token || process.env.SLACK_API_TOKEN;
commander.emails = process.env.EMAIL_SLACK_LIST || '';

if (!commander.org || !commander.token || !commander.sitekey || !commander.captcha) {
  commander.help()
}

slackin(commander).listen(commander.port, commander.hostname, function (err) {
  if (err) throw err
  console.log('%s â€“ listening on %s:%d', new Date, commander.hostname, commander.port)
})
